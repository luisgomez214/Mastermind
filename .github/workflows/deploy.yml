name: Mastermind

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies (if any)
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          # ensure requests is available for main.py even if there's no requirements.txt
          python - <<'PY'
          import importlib, subprocess, sys
          try:
              importlib.import_module("requests")
          except ImportError:
              subprocess.check_call([sys.executable, "-m", "pip", "install", "requests"])
          PY

      - name: Generate 10 random guesses via Random.org (3 digits, 1â€“8)
        run: |
          : > guesses.txt
          for i in $(seq 1 10); do
            curl -fsS "https://www.random.org/integers/?num=3&min=1&max=8&col=1&base=10&format=plain&rnd=new" \
              | tr -d '\r' | tr '\n' ' ' >> guesses.txt || true
            echo "" >> guesses.txt
          done
          echo "---- guesses.txt ----"
          cat guesses.txt

      - name: Run main.py non-interactively (pick single player=1, difficulty=3)
        run: |
          set -o pipefail
          # Build stdin: choose mode '1', difficulty '3', then 10 guesses (strip spaces)
          {
            echo "1"
            echo "4"
            sed 's/ //g' guesses.txt
          } | python main.py | tee game_run.txt
        # If you want CI to never fail even if Random.org hiccups, uncomment:
        # continue-on-error: true

      - name: Upload game transcript
        uses: actions/upload-artifact@v4
        with:
          name: mastermind-game-run
          path: game_run.txt

