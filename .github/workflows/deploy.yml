name: Mastermind

on:
  push:
    branches: [main]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          set -euo pipefail
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python - <<'PY'
          import importlib, subprocess, sys
          try:
              importlib.import_module("requests")
          except ImportError:
              subprocess.check_call([sys.executable, "-m", "pip", "install", "requests"])
          PY

      - name: Generate 10 random guesses via Random.org (strict)
        run: |
          set -euo pipefail
          : > guesses.txt
          for i in $(seq 1 10); do
            raw="$(curl -fsS "https://www.random.org/integers/?num=3&min=1&max=8&col=1&base=10&format=plain&rnd=new")"
            # Fail on any server-side error text
            if printf "%s" "$raw" | grep -qi '^error:'; then
              echo "Random.org error: $raw" >&2
              exit 1
            fi
            # Condense to exactly 3 digits (strip CR/LF/spaces)
            digits="$(printf "%s" "$raw" | tr -d '\r\n ' )"
            echo "$digits" >> guesses.txt
          done
          echo "---- guesses.txt ----"
          cat guesses.txt
          # Validate: exactly 10 lines, each line exactly 3 digits 1-8
          [ "$(wc -l < guesses.txt)" -eq 10 ] || { echo "Expected 10 lines in guesses.txt"; exit 1; }
          awk '!/^[1-8]{3}$/{print "Bad line:",$0; bad=1} END{exit bad}' guesses.txt

      - name: Run main.py non-interactively (1=single player, 3=easy)
        run: |
          set -euo pipefail
          {
            echo "1"   # mode: single player
            echo "3"   # difficulty: easy
            cat guesses.txt
          } | python main.py | tee game_run.txt

      - name: Upload game transcript
        if: always()  # still upload even if the job fails earlier
        uses: actions/upload-artifact@v4
        with:
          name: mastermind-game-run
          path: game_run.txt

